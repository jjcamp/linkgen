# Thanks to Nick Babcock, who pioneered the Rust portions of this pipeline
# https://nbsoftsolutions.com/blog/azure-pipelines-for-rust-projects

trigger:
  branches:
    include:
    - master
    - feature/*

pr:
  - master

strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-10.13'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )

  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - script: cargo build --all
    displayName: Debug build

  - script: cargo test --all
    displayName: Unit tests
  
  - task: NodeTool@0
    inputs:
       versionSpec: '12.x'
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - script: node tests.js
    displayName: I/O test
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - script: cargo build --release
    displayName: Release build
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  - publish: $(System.DefaultWorkingDirectory)/target/release/linkgen.exe
    artifact: windows_exe
    condition: eq( variables['Agent.OS'], 'Windows_NT' )